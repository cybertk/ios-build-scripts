#!/usr/bin/env bash

import_provisions ()
{
    if [ -z "$SCRIPT_DIR" ]
    then
        echo "error: \$SCRIPT_DIR is not defined"
        return 1
    fi

    if [ ! -d "$SCRIPT_DIR/provisions" ]
    then
        echo "error: $SCRIPT_DIR/provisions does not exist"
        return 1
    fi

    # Enforce system provisioning dir existence, it does not exist sometimes. See https://travis-ci.org/cybertk/BankLogo/builds/72412378#L142
    local provision_dir="$HOME/Library/MobileDevice/Provisioning Profiles/"
    mkdir "$provision_dir" >/dev/null 2>&1

    local p
    for p in $SCRIPT_DIR/provisions/*.mobileprovision;
    do
        [ "$p" = "$SCRIPT_DIR/provisions/*.mobileprovision" ] && break

        cp "$p" "$provision_dir"
        echo "${p##*/} imported"
    done
}

delete_provisions ()
{
    if [ -z "$SCRIPT_DIR" ]
    then
        echo "error: \$SCRIPT_DIR is not defined"
        return 1
    fi

    if [ ! -d "$SCRIPT_DIR/provisions" ]
    then
        echo "error: $SCRIPT_DIR/provisions does not exist"
        return 1
    fi

    local p
    for p in $SCRIPT_DIR/provisions/*.mobileprovision;
    do
        [ "$p" = "$SCRIPT_DIR/provisions/*.mobileprovision" ] && break

        rm "$HOME/Library/MobileDevice/Provisioning Profiles/${p##*/}"
    done
}

ls_provisions ()
{
    ls "$HOME/Library/MobileDevice/Provisioning Profiles"
}

purge_provisions ()
{
    /bin/rm -vf "$HOME/Library/MobileDevice/Provisioning Profiles/"*
}

usage () {
    echo "Usage: mobileprobvision < --import | --remove | -l >"
    echo ""
    echo "--import - Import provisions under provisions/"
    echo "--remove - Remove imported provisions under provisions/"
    echo "-l       - List all system provisions"
    echo "-p       - Purge all system provisions"
}

main ()
{
    if [ -z "$SCRIPT_DIR" ];
    then
        SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    fi

    case "$1" in
        --import)
            import_provisions
            ;;
        --remove)
            delete_provisions
            ;;
        -l)
            ls_provisions
            ;;
        -p)
            read -p "Are you sure? " -n 1 -r
            echo
            if [[ ! $REPLY =~ ^[Yy]$ ]]
            then
                exit 1
            fi
            purge_provisions
            ;;
        *)
            usage
            ;;
    esac
}

main "$@"
